name: Node.js CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 22
    
    - run: npm ci

    - name: Run tests
      run: npm test -- --ci

    - name: Test Report
      uses: dorny/test-reporter@v2
      if: ${{ !cancelled() }}
      with:
        name: "ðŸ§ª Jest Unit Tests"
        path: reports/junit-report.xml
        reporter: jest-junit

  lint:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 22
    - name: Lint JS code
      run : |
        npm ci
        npm run cilint
    - name: Lint Html
      run : npm run lint:html

  code-analysis:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    needs: lint

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v4
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    needs: code-analysis

    steps:
    - uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      
    - name: Build and Push to Dockerhub
      run: |
        DOCKER_TAG="${{ vars.DOCKER_USERNAME }}/devops-code-and-build:${GITHUB_SHA}"
        echo "${DOCKER_TAG}"
        docker build -t "${DOCKER_TAG}" .
        docker push "${DOCKER_TAG}"